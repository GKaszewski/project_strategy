name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always
  binary: project_strategy
  add_binaries_to_github_release: true

jobs:
  release-for-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libwayland-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Prepare package
        run: |
          mkdir linux
          cp target/x86_64-unknown-linux-gnu/release/${{ env.binary }} linux/
          cp -r assets linux/ || true
      - name: Package as zip
        working-directory: ./linux
        run: |
          zip --recurse-paths ../${{ env.binary }}.zip .
      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.binary }}.zip
          name: linux
          retention-days: 1
      - name: Run tests
        run: cargo test --verbose

  release-for-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - name: Prepare package
        run: |
          mkdir windows
          cp target/x86_64-pc-windows-msvc/release/${{ env.binary }}.exe windows/
          mkdir assets -ea 0 # create the assets directory if it does not exist, it will get ignored in the zip if empty
          cp -r assets windows/

      - name: Package as a zip
        run: |
          Compress-Archive -Path windows/* -DestinationPath ${{ env.binary }}.zip

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.binary }}.zip
          name: windows
          retention-days: 1
      - name: Run tests
        run: cargo test --verbose
